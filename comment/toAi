我们当前正在运行一个有ai生成页面的动态网页项目，项目旨在通过ai生成的家具控制页面技术来协助用户进行智能家居管理，在本步骤中，你需要理清组件树的关系，组件分为值组件<valueComponent>和布局管理组件<containerComponent>,值组件是对一切显示和编辑数据的组件的抽象，例如button，textInput，text，select，p，你不需要他们将在项目的后续步骤被确定，你无需关心


我们当前正在运行一个有ai生成页面的动态网页项目，
项目旨在通过ai生成的家具控制页面技术来协助用户进行智能家居管理，
在本步骤中，你需要理清组件树的关系，组件分为值组件<valueComponent>和布局管理组件<containerComponent>,值组件是对一切显示和编辑数据的组件的抽象，

例如button，textInput，text，select，p，他们的具体实现将在项目的后续步骤被确定，你无需关心，而布局管理组件是对一切div和css元素的抽象，

可以通过包裹值组件来实现布局管理，相同类型的值组件通常放在同一个布局管理组件，而几个相互关联的的布局管理组件又可以嵌套进一个更大的布局管理组件，

以此实现复杂的布局，例如headLine-body布局，但此时你无需关心 ，他们同样会在后续步骤被确定，

在这个模拟家具场景中，用户的住所包含中性空间
书房

儿童房
卧室
厨房
客厅
浴室这几个房间，每个房间包含若干家具，每个家具都包含若干属性，每个家具，家具属性都可以被唯一索引和被值组件修改。
在本步骤，你需要以

<containerComponent  explan="将一个组件放在标题栏展示房间名，另一个作为body内容控制灯泡开关">
<valueComponent explain="显示卧室的房间名"/><valueComponent explain="控制和显示灯泡开关"/>
</containerComponent >

的形式完成组件树的构建，其中explain是你希望该组件在后续步骤承担什么任务